{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WKVAIO\\\\Documents\\\\GitHub\\\\adivinhe-o-pais-n1-backend-2\\\\adivinhe-o-pais-frontend\\\\src\\\\components\\\\Jogo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport 'sweetalert2/dist/sweetalert2.min.css';\nimport styles from './Jogo.module.css';\nimport { useTheme } from '../context/ThemeContext';\n\n// 1. O componente agora recebe 'modo' e 'voltarAoMenu' como props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Jogo({\n  modo,\n  voltarAoMenu\n}) {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const [pergunta, setPergunta] = useState(null);\n  const [placar, setPlacar] = useState({\n    score: 0,\n    vidas: 3\n  });\n  const [feedback, setFeedback] = useState('');\n  const [carregando, setCarregando] = useState(true);\n  const [statusResposta, setStatusResposta] = useState({\n    selecionada: null,\n    correta: null\n  });\n\n  // 2. Novo estado para o nosso timer!\n  const [tempo, setTempo] = useState(60); // Começa com 60 segundos\n\n  const buscarPergunta = useCallback(async () => {\n    setCarregando(true);\n    setFeedback('');\n    setStatusResposta({\n      selecionada: null,\n      correta: null\n    });\n    try {\n      const response = await axios.get('http://localhost:3000/jogo/pergunta', {\n        withCredentials: true\n      });\n      setPergunta(response.data);\n    } catch (error) {\n      console.error(\"Deu ruim pra buscar a pergunta!\", error);\n      setFeedback('Erro ao conectar com o servidor. Tente recarregar a página.');\n    } finally {\n      setCarregando(false);\n    }\n  }, []);\n  useEffect(() => {\n    // Zera o placar e o tempo ao iniciar um novo modo\n    setPlacar({\n      score: 0,\n      vidas: 3\n    });\n    setTempo(60);\n    buscarPergunta();\n  }, [modo, buscarPergunta]); // Roda sempre que o modo de jogo mudar\n\n  // 3. useEffect para controlar o timer\n  useEffect(() => {\n    if (modo === 'timeAttack' && !carregando && tempo > 0 && !statusResposta.selecionada) {\n      const timerId = setInterval(() => {\n        setTempo(t => t - 1);\n      }, 1000);\n      return () => clearInterval(timerId);\n    }\n  }, [modo, carregando, tempo, statusResposta.selecionada]);\n\n  // useEffect para verificar se o tempo acabou\n  useEffect(() => {\n    if (modo === 'timeAttack' && tempo === 0) {\n      Swal.fire({\n        title: 'Tempo Esgotado!',\n        text: `Sua pontuação final foi: ${placar.score} pontos.`,\n        icon: 'warning',\n        confirmButtonText: 'Voltar ao Menu',\n        background: '#282c34',\n        color: '#ffffff'\n      }).then(() => {\n        voltarAoMenu();\n      });\n    }\n  }, [modo, tempo, placar.score, voltarAoMenu]);\n  const handleResposta = async respostaDoUsuario => {\n    if (carregando || statusResposta.selecionada) return;\n\n    // Pausamos o carregamento, mas não o timer visualmente\n    setCarregando(true);\n    try {\n      const response = await axios.post('http://localhost:3000/jogo/responder', {\n        sua_resposta: respostaDoUsuario\n      }, {\n        withCredentials: true\n      });\n      const resultado = response.data;\n      const respostaCorreta = resultado.resposta_certa || respostaDoUsuario;\n      setStatusResposta({\n        selecionada: respostaDoUsuario,\n        correta: respostaCorreta\n      });\n\n      // 4. Lógica de pontuação adaptada para o modo de jogo\n      if (resultado.resultado === 'correto') {\n        setFeedback('Certa resposta! ✅');\n        if (modo === 'timeAttack') {\n          setTempo(t => t + 2); // Adiciona 2 segundos por acerto\n          setPlacar(p => ({\n            ...p,\n            score: p.score + 1\n          }));\n        } else {\n          setPlacar({\n            score: resultado.score,\n            vidas: resultado.vidas\n          });\n        }\n      } else {\n        setFeedback(`Errado! A resposta era ${respostaCorreta}. ❌`);\n        if (modo !== 'timeAttack') {\n          setPlacar({\n            score: resultado.score,\n            vidas: resultado.vidas\n          });\n        } else {\n          setPlacar(p => ({\n            ...p,\n            score: p.score\n          }));\n        }\n      }\n\n      // Lógica de fim de jogo para o modo clássico\n      if (modo === 'classico' && resultado.mensagem) {\n        Swal.fire({\n          title: resultado.mensagem,\n          icon: resultado.score >= 5 ? 'success' : 'error',\n          confirmButtonText: 'Jogar Novamente',\n          background: '#282c34',\n          color: '#ffffff',\n          confirmButtonColor: '#61dafb'\n        }).then(() => {\n          setPlacar({\n            score: 0,\n            vidas: 3\n          });\n          buscarPergunta();\n        });\n      } else {\n        // Se o jogo continua, busca a próxima pergunta\n        setTimeout(() => {\n          buscarPergunta();\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(\"Deu ruim pra enviar a resposta!\", error);\n      setFeedback('Erro ao conectar com o servidor.');\n    } finally {\n      // A gente só seta carregando pra false depois que a pergunta nova chegar\n      // A função buscarPergunta já faz isso\n    }\n  };\n  const getButtonClass = opcao => {/* ... (sem mudanças aqui) ... */};\n  if (!pergunta && carregando) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 43\n    }, this);\n  }\n  if (!pergunta) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"N\\xE3o foi poss\\xEDvel carregar o jogo. Verifique se a API est\\xE1 no ar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.placar,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Pontos: \", placar.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), modo === 'classico' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Vidas: \", placar.vidas, \" \\u2764\\uFE0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Tempo: \", tempo, \"s \\u23F3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pergunta,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pergunta.pergunta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), pergunta.flagUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pergunta.flagUrl,\n          alt: \"Bandeira do pa\\xEDs\",\n          className: styles.bandeira\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 44\n        }, this), pergunta.dica_extra && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\"Dica: \", pergunta.dica_extra]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.feedback,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.opcoes,\n        children: pergunta.opcoes.map((opcao, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: getButtonClass(opcao),\n          onClick: () => handleResposta(opcao),\n          disabled: carregando || statusResposta.selecionada,\n          children: opcao\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: voltarAoMenu,\n        className: styles.menuButton,\n        children: \"Voltar ao Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(Jogo, \"cwXX3XvQq7c1QbJq8+BbOFWbHeA=\", false, function () {\n  return [useTheme];\n});\n_c = Jogo;\nexport default Jogo;\nvar _c;\n$RefreshReg$(_c, \"Jogo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Swal","styles","useTheme","jsxDEV","_jsxDEV","Jogo","modo","voltarAoMenu","_s","theme","pergunta","setPergunta","placar","setPlacar","score","vidas","feedback","setFeedback","carregando","setCarregando","statusResposta","setStatusResposta","selecionada","correta","tempo","setTempo","buscarPergunta","response","get","withCredentials","data","error","console","timerId","setInterval","t","clearInterval","fire","title","text","icon","confirmButtonText","background","color","then","handleResposta","respostaDoUsuario","post","sua_resposta","resultado","respostaCorreta","resposta_certa","p","mensagem","confirmButtonColor","setTimeout","getButtonClass","opcao","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","flagUrl","src","alt","bandeira","dica_extra","opcoes","map","index","onClick","disabled","menuButton","_c","$RefreshReg$"],"sources":["C:/Users/WKVAIO/Documents/GitHub/adivinhe-o-pais-n1-backend-2/adivinhe-o-pais-frontend/src/components/Jogo.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport 'sweetalert2/dist/sweetalert2.min.css';\r\nimport styles from './Jogo.module.css';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\n// 1. O componente agora recebe 'modo' e 'voltarAoMenu' como props\r\nfunction Jogo({ modo, voltarAoMenu }) {\r\n    const { theme } = useTheme();\r\n    const [pergunta, setPergunta] = useState(null);\r\n    const [placar, setPlacar] = useState({ score: 0, vidas: 3 });\r\n    const [feedback, setFeedback] = useState('');\r\n    const [carregando, setCarregando] = useState(true);\r\n    const [statusResposta, setStatusResposta] = useState({ selecionada: null, correta: null });\r\n    \r\n    // 2. Novo estado para o nosso timer!\r\n    const [tempo, setTempo] = useState(60); // Começa com 60 segundos\r\n\r\n    const buscarPergunta = useCallback(async () => {\r\n        setCarregando(true);\r\n        setFeedback('');\r\n        setStatusResposta({ selecionada: null, correta: null });\r\n        try {\r\n            const response = await axios.get('http://localhost:3000/jogo/pergunta', { withCredentials: true });\r\n            setPergunta(response.data);\r\n        } catch (error) {\r\n            console.error(\"Deu ruim pra buscar a pergunta!\", error);\r\n            setFeedback('Erro ao conectar com o servidor. Tente recarregar a página.');\r\n        } finally {\r\n            setCarregando(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Zera o placar e o tempo ao iniciar um novo modo\r\n        setPlacar({ score: 0, vidas: 3 });\r\n        setTempo(60);\r\n        buscarPergunta();\r\n    }, [modo, buscarPergunta]); // Roda sempre que o modo de jogo mudar\r\n\r\n    // 3. useEffect para controlar o timer\r\n    useEffect(() => {\r\n        if (modo === 'timeAttack' && !carregando && tempo > 0 && !statusResposta.selecionada) {\r\n            const timerId = setInterval(() => {\r\n                setTempo(t => t - 1);\r\n            }, 1000);\r\n            return () => clearInterval(timerId);\r\n        }\r\n    }, [modo, carregando, tempo, statusResposta.selecionada]);\r\n\r\n    // useEffect para verificar se o tempo acabou\r\n    useEffect(() => {\r\n        if (modo === 'timeAttack' && tempo === 0) {\r\n            Swal.fire({\r\n                title: 'Tempo Esgotado!',\r\n                text: `Sua pontuação final foi: ${placar.score} pontos.`,\r\n                icon: 'warning',\r\n                confirmButtonText: 'Voltar ao Menu',\r\n                background: '#282c34', color: '#ffffff'\r\n            }).then(() => {\r\n                voltarAoMenu();\r\n            });\r\n        }\r\n    }, [modo, tempo, placar.score, voltarAoMenu]);\r\n\r\n    const handleResposta = async (respostaDoUsuario) => {\r\n        if (carregando || statusResposta.selecionada) return;\r\n\r\n        // Pausamos o carregamento, mas não o timer visualmente\r\n        setCarregando(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/jogo/responder', \r\n                { sua_resposta: respostaDoUsuario }, { withCredentials: true }\r\n            );\r\n\r\n            const resultado = response.data;\r\n            const respostaCorreta = resultado.resposta_certa || respostaDoUsuario;\r\n            setStatusResposta({ selecionada: respostaDoUsuario, correta: respostaCorreta });\r\n\r\n            // 4. Lógica de pontuação adaptada para o modo de jogo\r\n            if (resultado.resultado === 'correto') {\r\n                setFeedback('Certa resposta! ✅');\r\n                if (modo === 'timeAttack') {\r\n                    setTempo(t => t + 2); // Adiciona 2 segundos por acerto\r\n                    setPlacar(p => ({ ...p, score: p.score + 1 }));\r\n                } else {\r\n                    setPlacar({ score: resultado.score, vidas: resultado.vidas });\r\n                }\r\n            } else {\r\n                setFeedback(`Errado! A resposta era ${respostaCorreta}. ❌`);\r\n                if (modo !== 'timeAttack') {\r\n                    setPlacar({ score: resultado.score, vidas: resultado.vidas });\r\n                } else {\r\n                    setPlacar(p => ({ ...p, score: p.score }));\r\n                }\r\n            }\r\n            \r\n            // Lógica de fim de jogo para o modo clássico\r\n            if (modo === 'classico' && resultado.mensagem) {\r\n                Swal.fire({\r\n                    title: resultado.mensagem,\r\n                    icon: resultado.score >= 5 ? 'success' : 'error',\r\n                    confirmButtonText: 'Jogar Novamente',\r\n                    background: '#282c34', color: '#ffffff', confirmButtonColor: '#61dafb'\r\n                }).then(() => {\r\n                    setPlacar({ score: 0, vidas: 3 }); \r\n                    buscarPergunta();\r\n                });\r\n            } else {\r\n                // Se o jogo continua, busca a próxima pergunta\r\n                setTimeout(() => {\r\n                    buscarPergunta();\r\n                }, 2000);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Deu ruim pra enviar a resposta!\", error);\r\n            setFeedback('Erro ao conectar com o servidor.');\r\n        } finally {\r\n            // A gente só seta carregando pra false depois que a pergunta nova chegar\r\n            // A função buscarPergunta já faz isso\r\n        }\r\n    };\r\n    \r\n    const getButtonClass = (opcao) => { /* ... (sem mudanças aqui) ... */ };\r\n\r\n    if (!pergunta && carregando) { return <div>Carregando...</div>; }\r\n    if (!pergunta) { return <div>Não foi possível carregar o jogo. Verifique se a API está no ar.</div>; }\r\n\r\n    return (\r\n        <div className={theme}> \r\n            <div className={styles.container}>\r\n                <div className={styles.placar}>\r\n                    <p><b>Pontos: {placar.score}</b></p>\r\n                    \r\n                    {/* 5. Mostra Vidas ou Tempo dependendo do modo */}\r\n                    {modo === 'classico' ? (\r\n                        <p><b>Vidas: {placar.vidas} ❤️</b></p>\r\n                    ) : (\r\n                        <p><b>Tempo: {tempo}s ⏳</b></p>\r\n                    )}\r\n                </div>\r\n                <div className={styles.pergunta}>\r\n                    <h2>{pergunta.pergunta}</h2>\r\n                    {pergunta.flagUrl && ( <img src={pergunta.flagUrl} alt=\"Bandeira do país\" className={styles.bandeira} /> )}\r\n                    {pergunta.dica_extra && <p><em>Dica: {pergunta.dica_extra}</em></p>}\r\n                </div>\r\n                \r\n                {feedback && <div className={styles.feedback}>{feedback}</div>}\r\n\r\n                <div className={styles.opcoes}>\r\n                    {pergunta.opcoes.map((opcao, index) => (\r\n                        <button \r\n                            key={index}\r\n                            className={getButtonClass(opcao)}\r\n                            onClick={() => handleResposta(opcao)}\r\n                            disabled={carregando || statusResposta.selecionada}\r\n                        >\r\n                            {opcao}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <button onClick={voltarAoMenu} className={styles.menuButton}>Voltar ao Menu</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jogo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}