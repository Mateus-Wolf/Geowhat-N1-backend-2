{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WKVAIO\\\\Documents\\\\GitHub\\\\adivinhe-o-pais-n1-backend-2\\\\adivinhe-o-pais-frontend\\\\src\\\\components\\\\Jogo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react'; // 1. Importamos o useCallback\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Jogo() {\n  _s();\n  // Estados que já tínhamos\n  const [pergunta, setPergunta] = useState(null);\n  const [placar, setPlacar] = useState({\n    score: 0,\n    vidas: 3\n  });\n\n  // 2. Novos estados para uma melhor experiência\n  const [feedback, setFeedback] = useState(''); // Para mostrar \"Correto!\" ou \"Errado!\"\n  const [carregando, setCarregando] = useState(true); // Para saber se estamos buscando uma pergunta\n\n  // 3. Refatoramos a busca da pergunta para poder chamar ela de novo depois\n  const buscarPergunta = useCallback(async () => {\n    setCarregando(true); // Começamos a carregar\n    try {\n      const response = await axios.get('http://localhost:3000/jogo/pergunta', {\n        withCredentials: true\n      });\n      setPergunta(response.data);\n      // Inicializa o placar na primeira pergunta\n      if (req.session.score === undefined) {\n        // Check if 'req' is defined\n        setPlacar({\n          score: 0,\n          vidas: 3\n        });\n      }\n    } catch (error) {\n      console.error(\"Deu ruim pra buscar a pergunta!\", error);\n      setFeedback('Erro ao conectar com o servidor. Tente recarregar a página.');\n    } finally {\n      setCarregando(false); // Terminamos de carregar\n    }\n  }, []);\n\n  // useEffect para buscar a primeira pergunta\n  useEffect(() => {\n    buscarPergunta();\n  }, [buscarPergunta]);\n\n  // 4. A GRANDE NOVIDADE: Função para lidar com a resposta do jogador\n  const handleResposta = async respostaDoUsuario => {\n    if (carregando) return; // Não permite clicar se já estiver carregando\n\n    setCarregando(true); // Bloqueia os botões\n    try {\n      const response = await axios.post('http://localhost:3000/jogo/responder', {\n        sua_resposta: respostaDoUsuario\n      }, {\n        withCredentials: true\n      });\n      const resultado = response.data;\n\n      // Atualiza o placar com os dados que vieram do back-end\n      setPlacar({\n        score: resultado.score,\n        vidas: resultado.vidas\n      });\n\n      // Dá um feedback visual para o jogador\n      if (resultado.resultado === 'correto') {\n        setFeedback('Certa resposta! ✅');\n      } else {\n        setFeedback(`Errado! A resposta era ${resultado.resposta_certa}. ❌`);\n      }\n\n      // Se o jogo acabou, mostra a mensagem final\n      if (resultado.mensagem) {\n        setTimeout(() => {\n          alert(resultado.mensagem); // Mostra o alerta de vitória/derrota\n          buscarPergunta(); // Busca uma nova pergunta para reiniciar o jogo\n          setFeedback('');\n        }, 2000); // Espera 2 segundos antes de reiniciar\n      } else {\n        // Espera um pouquinho para o jogador ver o feedback e depois busca a próxima pergunta\n        setTimeout(() => {\n          buscarPergunta();\n          setFeedback('');\n        }, 2000); // 2 segundos de feedback\n      }\n    } catch (error) {\n      console.error(\"Deu ruim pra enviar a resposta!\", error);\n      setFeedback('Erro ao conectar com o servidor.');\n      setCarregando(false);\n    }\n  };\n  if (!pergunta && carregando) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n  if (!pergunta) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"N\\xE3o foi poss\\xEDvel carregar o jogo. Verifique se a API est\\xE1 no ar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pontos: \", placar.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vidas: \", placar.vidas, \" \\u2764\\uFE0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pergunta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pergunta.pergunta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), pergunta.dica_extra && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"Dica: \", pergunta.dica_extra]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"opcoes\",\n      children: pergunta.opcoes.map((opcao, index) =>\n      /*#__PURE__*/\n      // 6. Conectamos o onClick e o disabled nos botões\n      _jsxDEV(\"button\", {\n        onClick: () => handleResposta(opcao),\n        disabled: carregando // O botão fica desabilitado enquanto carrega\n        ,\n        children: opcao\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(Jogo, \"1HSyIoVIstSsz5swyCE2EcuEXJs=\");\n_c = Jogo;\nexport default Jogo;\nvar _c;\n$RefreshReg$(_c, \"Jogo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","Jogo","_s","pergunta","setPergunta","placar","setPlacar","score","vidas","feedback","setFeedback","carregando","setCarregando","buscarPergunta","response","get","withCredentials","data","req","session","undefined","error","console","handleResposta","respostaDoUsuario","post","sua_resposta","resultado","resposta_certa","mensagem","setTimeout","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dica_extra","opcoes","map","opcao","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/WKVAIO/Documents/GitHub/adivinhe-o-pais-n1-backend-2/adivinhe-o-pais-frontend/src/components/Jogo.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'; // 1. Importamos o useCallback\r\nimport axios from 'axios';\r\n\r\nfunction Jogo() {\r\n    // Estados que já tínhamos\r\n    const [pergunta, setPergunta] = useState(null);\r\n    const [placar, setPlacar] = useState({ score: 0, vidas: 3 });\r\n    \r\n    // 2. Novos estados para uma melhor experiência\r\n    const [feedback, setFeedback] = useState(''); // Para mostrar \"Correto!\" ou \"Errado!\"\r\n    const [carregando, setCarregando] = useState(true); // Para saber se estamos buscando uma pergunta\r\n\r\n    // 3. Refatoramos a busca da pergunta para poder chamar ela de novo depois\r\n    const buscarPergunta = useCallback(async () => {\r\n        setCarregando(true); // Começamos a carregar\r\n        try {\r\n            const response = await axios.get('http://localhost:3000/jogo/pergunta', { withCredentials: true });\r\n            setPergunta(response.data);\r\n            // Inicializa o placar na primeira pergunta\r\n            if (req.session.score === undefined) { // Check if 'req' is defined\r\n             setPlacar({ score: 0, vidas: 3 });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Deu ruim pra buscar a pergunta!\", error);\r\n            setFeedback('Erro ao conectar com o servidor. Tente recarregar a página.');\r\n        } finally {\r\n            setCarregando(false); // Terminamos de carregar\r\n        }\r\n    }, []);\r\n\r\n    // useEffect para buscar a primeira pergunta\r\n    useEffect(() => {\r\n        buscarPergunta();\r\n    }, [buscarPergunta]);\r\n\r\n    // 4. A GRANDE NOVIDADE: Função para lidar com a resposta do jogador\r\n    const handleResposta = async (respostaDoUsuario) => {\r\n        if (carregando) return; // Não permite clicar se já estiver carregando\r\n\r\n        setCarregando(true); // Bloqueia os botões\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/jogo/responder', \r\n                { sua_resposta: respostaDoUsuario },\r\n                { withCredentials: true }\r\n            );\r\n\r\n            const resultado = response.data;\r\n\r\n            // Atualiza o placar com os dados que vieram do back-end\r\n            setPlacar({ score: resultado.score, vidas: resultado.vidas });\r\n\r\n            // Dá um feedback visual para o jogador\r\n            if (resultado.resultado === 'correto') {\r\n                setFeedback('Certa resposta! ✅');\r\n            } else {\r\n                setFeedback(`Errado! A resposta era ${resultado.resposta_certa}. ❌`);\r\n            }\r\n\r\n            // Se o jogo acabou, mostra a mensagem final\r\n            if (resultado.mensagem) {\r\n                setTimeout(() => {\r\n                    alert(resultado.mensagem); // Mostra o alerta de vitória/derrota\r\n                    buscarPergunta(); // Busca uma nova pergunta para reiniciar o jogo\r\n                    setFeedback('');\r\n                }, 2000); // Espera 2 segundos antes de reiniciar\r\n            } else {\r\n                 // Espera um pouquinho para o jogador ver o feedback e depois busca a próxima pergunta\r\n                setTimeout(() => {\r\n                    buscarPergunta();\r\n                    setFeedback('');\r\n                }, 2000); // 2 segundos de feedback\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Deu ruim pra enviar a resposta!\", error);\r\n            setFeedback('Erro ao conectar com o servidor.');\r\n            setCarregando(false);\r\n        }\r\n    };\r\n\r\n    if (!pergunta && carregando) {\r\n        return <div>Carregando...</div>;\r\n    }\r\n\r\n    if (!pergunta) {\r\n        return <div>Não foi possível carregar o jogo. Verifique se a API está no ar.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"placar\">\r\n                <p>Pontos: {placar.score}</p>\r\n                <p>Vidas: {placar.vidas} ❤️</p>\r\n            </div>\r\n            <div className=\"pergunta\">\r\n                <h2>{pergunta.pergunta}</h2>\r\n                {pergunta.dica_extra && <p><em>Dica: {pergunta.dica_extra}</em></p>}\r\n            </div>\r\n            \r\n            {/* 5. Mostra a mensagem de feedback na tela */}\r\n            {feedback && <div className=\"feedback\">{feedback}</div>}\r\n\r\n            <div className=\"opcoes\">\r\n                {pergunta.opcoes.map((opcao, index) => (\r\n                    // 6. Conectamos o onClick e o disabled nos botões\r\n                    <button \r\n                        key={index}\r\n                        onClick={() => handleResposta(opcao)}\r\n                        disabled={carregando} // O botão fica desabilitado enquanto carrega\r\n                    >\r\n                        {opcao}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jogo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}