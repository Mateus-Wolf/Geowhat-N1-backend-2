{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WKVAIO\\\\Documents\\\\GitHub\\\\adivinhe-o-pais-n1-backend-2\\\\adivinhe-o-pais-frontend\\\\src\\\\components\\\\Jogo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // 1. Importamos os hooks\nimport axios from 'axios'; // Importamos o axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Jogo() {\n  _s();\n  // 2. Criamos os \"estados\" (a memória) do nosso componente\n  const [pergunta, setPergunta] = useState(null); // Para guardar o objeto da pergunta\n  const [placar, setPlacar] = useState({\n    score: 0,\n    vidas: 3\n  }); // Para guardar o placar\n\n  // 3. useEffect para buscar a pergunta QUANDO o componente carregar\n  useEffect(() => {\n    // É uma boa prática criar uma função async dentro do useEffect\n    const buscarPergunta = async () => {\n      try {\n        // O withCredentials é importante para o back-end receber nosso cookie de sessão\n        const response = await axios.get('http://localhost:3000/jogo/pergunta', {\n          withCredentials: true\n        });\n        setPergunta(response.data); // Guardamos a pergunta no nosso estado\n\n        // Se o placar ainda não foi iniciado no front, a gente usa o da sessão\n        // (Isso será útil quando implementarmos a resposta)\n        if (response.data.score !== undefined) {\n          setPlacar({\n            score: response.data.score,\n            vidas: response.data.vidas\n          });\n        }\n      } catch (error) {\n        console.error(\"Deu ruim pra buscar a pergunta!\", error);\n      }\n    };\n    buscarPergunta(); // Executamos a função\n  }, []); // O array vazio [] significa: \"rode este efeito apenas UMA VEZ, quando o componente montar\"\n\n  // 4. Renderização condicional: Mostra \"Carregando...\" enquanto a pergunta não chega\n  if (!pergunta) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando pergunta...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 5. Quando a pergunta chega, a gente renderiza o jogo de verdade\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pontos: \", placar.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vidas: \", placar.vidas, \" \\u2764\\uFE0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pergunta\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pergunta.pergunta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), pergunta.dica_extra && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"Dica: \", pergunta.dica_extra]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"opcoes\",\n      children: pergunta.opcoes.map((opcao, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        children: opcao\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Jogo, \"fLV8ZqsoTCFTtcH6tcGiTWxR1CE=\");\n_c = Jogo;\nexport default Jogo;\nvar _c;\n$RefreshReg$(_c, \"Jogo\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Jogo","_s","pergunta","setPergunta","placar","setPlacar","score","vidas","buscarPergunta","response","get","withCredentials","data","undefined","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dica_extra","opcoes","map","opcao","index","_c","$RefreshReg$"],"sources":["C:/Users/WKVAIO/Documents/GitHub/adivinhe-o-pais-n1-backend-2/adivinhe-o-pais-frontend/src/components/Jogo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // 1. Importamos os hooks\r\nimport axios from 'axios'; // Importamos o axios\r\n\r\nfunction Jogo() {\r\n    // 2. Criamos os \"estados\" (a memória) do nosso componente\r\n    const [pergunta, setPergunta] = useState(null); // Para guardar o objeto da pergunta\r\n    const [placar, setPlacar] = useState({ score: 0, vidas: 3 }); // Para guardar o placar\r\n\r\n    // 3. useEffect para buscar a pergunta QUANDO o componente carregar\r\n    useEffect(() => {\r\n        // É uma boa prática criar uma função async dentro do useEffect\r\n        const buscarPergunta = async () => {\r\n            try {\r\n                // O withCredentials é importante para o back-end receber nosso cookie de sessão\r\n                const response = await axios.get('http://localhost:3000/jogo/pergunta', { withCredentials: true });\r\n                setPergunta(response.data); // Guardamos a pergunta no nosso estado\r\n                \r\n                // Se o placar ainda não foi iniciado no front, a gente usa o da sessão\r\n                // (Isso será útil quando implementarmos a resposta)\r\n                if (response.data.score !== undefined) {\r\n                    setPlacar({ score: response.data.score, vidas: response.data.vidas });\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error(\"Deu ruim pra buscar a pergunta!\", error);\r\n            }\r\n        };\r\n\r\n        buscarPergunta(); // Executamos a função\r\n    }, []); // O array vazio [] significa: \"rode este efeito apenas UMA VEZ, quando o componente montar\"\r\n\r\n    // 4. Renderização condicional: Mostra \"Carregando...\" enquanto a pergunta não chega\r\n    if (!pergunta) {\r\n        return <div>Carregando pergunta...</div>;\r\n    }\r\n\r\n    // 5. Quando a pergunta chega, a gente renderiza o jogo de verdade\r\n    return (\r\n        <div>\r\n            <div className=\"placar\">\r\n                {/* Usamos os dados do nosso estado 'placar' */}\r\n                <p>Pontos: {placar.score}</p>\r\n                <p>Vidas: {placar.vidas} ❤️</p>\r\n            </div>\r\n            <div className=\"pergunta\">\r\n                {/* Usamos os dados do nosso estado 'pergunta' */}\r\n                <h2>{pergunta.pergunta}</h2>\r\n                {pergunta.dica_extra && <p><em>Dica: {pergunta.dica_extra}</em></p>}\r\n            </div>\r\n            <div className=\"opcoes\">\r\n                {/* Usamos o .map() para criar um botão para cada opção */}\r\n                {pergunta.opcoes.map((opcao, index) => (\r\n                    <button key={index}>{opcao}</button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jogo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}