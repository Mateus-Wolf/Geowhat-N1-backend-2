{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WKVAIO\\\\Documents\\\\GitHub\\\\adivinhe-o-pais-n1-backend-2\\\\adivinhe-o-pais-frontend\\\\src\\\\components\\\\Jogo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport 'sweetalert2/dist/sweetalert2.min.css';\nimport styles from './Jogo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Jogo() {\n  _s();\n  const [pergunta, setPergunta] = useState(null);\n  const [placar, setPlacar] = useState({\n    score: 0,\n    vidas: 3\n  });\n  const [feedback, setFeedback] = useState('');\n  const [carregando, setCarregando] = useState(true);\n  // 1. NOVO ESTADO para controlar o estilo dos botões\n  const [statusResposta, setStatusResposta] = useState({\n    selecionada: null,\n    correta: null\n  });\n  const buscarPergunta = useCallback(async () => {\n    setCarregando(true);\n    setFeedback('');\n    setStatusResposta({\n      selecionada: null,\n      correta: null\n    }); // Reseta o estilo dos botões\n    try {\n      const response = await axios.get('http://localhost:3000/jogo/pergunta', {\n        withCredentials: true\n      });\n      setPergunta(response.data);\n    } catch (error) {\n      console.error(\"Deu ruim pra buscar a pergunta!\", error);\n      setFeedback('Erro ao conectar com o servidor. Tente recarregar a página.');\n    } finally {\n      setCarregando(false);\n    }\n  }, []);\n  useEffect(() => {\n    buscarPergunta();\n  }, [buscarPergunta]);\n  const handleResposta = async respostaDoUsuario => {\n    if (carregando) return;\n    setCarregando(true);\n    try {\n      const response = await axios.post('http://localhost:3000/jogo/responder', {\n        sua_resposta: respostaDoUsuario\n      }, {\n        withCredentials: true\n      });\n      const resultado = response.data;\n      setPlacar({\n        score: resultado.score,\n        vidas: resultado.vidas\n      });\n\n      // 2. ATUALIZAMOS O ESTADO com a resposta do usuário e a resposta correta\n      const respostaCorreta = resultado.resposta_certa || respostaDoUsuario;\n      setStatusResposta({\n        selecionada: respostaDoUsuario,\n        correta: respostaCorreta\n      });\n      if (resultado.resultado === 'correto') {\n        setFeedback('Certa resposta! ✅');\n      } else {\n        setFeedback(`Errado! A resposta era ${respostaCorreta}. ❌`);\n      }\n      if (resultado.mensagem) {\n        Swal.fire({\n          // ... (lógica do Swal.fire continua igual)\n        }).then(() => {\n          setPlacar({\n            score: 0,\n            vidas: 3\n          });\n          buscarPergunta();\n        });\n      } else {\n        setTimeout(() => {\n          buscarPergunta();\n        }, 2000);\n      }\n    } catch (error) {\n      // ... (lógica de erro continua igual)\n    }\n  };\n\n  // 3. NOVA FUNÇÃO para decidir a classe do botão\n  const getButtonClass = opcao => {\n    if (!statusResposta.selecionada) {\n      // Se ninguém respondeu ainda, classe padrão\n      return styles.botaoOpcao;\n    }\n    if (opcao === statusResposta.correta) {\n      // Se a opção é a correta, pinta de verde\n      return `${styles.botaoOpcao} ${styles.correto}`;\n    }\n    if (opcao === statusResposta.selecionada) {\n      // Se a opção foi a que o usuário clicou (e não é a correta), pinta de vermelho\n      return `${styles.botaoOpcao} ${styles.incorreto}`;\n    }\n    // Para as outras opções, deixa desabilitada\n    return `${styles.botaoOpcao} ${styles.desabilitado}`;\n  };\n  if (!pergunta && carregando) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 43\n    }, this);\n  }\n  if (!pergunta) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"N\\xE3o foi poss\\xEDvel carregar o jogo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.placar,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pontos: \", placar.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vidas: \", placar.vidas, \" \\u2764\\uFE0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pergunta,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pergunta.pergunta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), pergunta.dica_extra && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: [\"Dica: \", pergunta.dica_extra]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.feedback,\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.opcoes,\n      children: pergunta.opcoes.map((opcao, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        // 4. A classe do botão agora é dinâmica!\n        className: getButtonClass(opcao),\n        onClick: () => handleResposta(opcao)\n        // Desabilita todos os botões assim que uma resposta é selecionada\n        ,\n        disabled: carregando || statusResposta.selecionada,\n        children: opcao\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(Jogo, \"C6aOg0d7Gu+WVCd7i0f+U0wN12U=\");\n_c = Jogo;\nexport default Jogo;\nvar _c;\n$RefreshReg$(_c, \"Jogo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Swal","styles","jsxDEV","_jsxDEV","Jogo","_s","pergunta","setPergunta","placar","setPlacar","score","vidas","feedback","setFeedback","carregando","setCarregando","statusResposta","setStatusResposta","selecionada","correta","buscarPergunta","response","get","withCredentials","data","error","console","handleResposta","respostaDoUsuario","post","sua_resposta","resultado","respostaCorreta","resposta_certa","mensagem","fire","then","setTimeout","getButtonClass","opcao","botaoOpcao","correto","incorreto","desabilitado","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","dica_extra","opcoes","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/WKVAIO/Documents/GitHub/adivinhe-o-pais-n1-backend-2/adivinhe-o-pais-frontend/src/components/Jogo.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport 'sweetalert2/dist/sweetalert2.min.css';\r\nimport styles from './Jogo.module.css';\r\n\r\nfunction Jogo() {\r\n    const [pergunta, setPergunta] = useState(null);\r\n    const [placar, setPlacar] = useState({ score: 0, vidas: 3 });\r\n    const [feedback, setFeedback] = useState('');\r\n    const [carregando, setCarregando] = useState(true);\r\n    // 1. NOVO ESTADO para controlar o estilo dos botões\r\n    const [statusResposta, setStatusResposta] = useState({ selecionada: null, correta: null });\r\n\r\n    const buscarPergunta = useCallback(async () => {\r\n        setCarregando(true);\r\n        setFeedback('');\r\n        setStatusResposta({ selecionada: null, correta: null }); // Reseta o estilo dos botões\r\n        try {\r\n            const response = await axios.get('http://localhost:3000/jogo/pergunta', { withCredentials: true });\r\n            setPergunta(response.data);\r\n        } catch (error) {\r\n            console.error(\"Deu ruim pra buscar a pergunta!\", error);\r\n            setFeedback('Erro ao conectar com o servidor. Tente recarregar a página.');\r\n        } finally {\r\n            setCarregando(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        buscarPergunta();\r\n    }, [buscarPergunta]);\r\n\r\n    const handleResposta = async (respostaDoUsuario) => {\r\n        if (carregando) return;\r\n\r\n        setCarregando(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/jogo/responder', \r\n                { sua_resposta: respostaDoUsuario },\r\n                { withCredentials: true }\r\n            );\r\n\r\n            const resultado = response.data;\r\n            setPlacar({ score: resultado.score, vidas: resultado.vidas });\r\n\r\n            // 2. ATUALIZAMOS O ESTADO com a resposta do usuário e a resposta correta\r\n            const respostaCorreta = resultado.resposta_certa || respostaDoUsuario;\r\n            setStatusResposta({ selecionada: respostaDoUsuario, correta: respostaCorreta });\r\n\r\n            if (resultado.resultado === 'correto') {\r\n                setFeedback('Certa resposta! ✅');\r\n            } else {\r\n                setFeedback(`Errado! A resposta era ${respostaCorreta}. ❌`);\r\n            }\r\n\r\n            if (resultado.mensagem) {\r\n                Swal.fire({\r\n                    // ... (lógica do Swal.fire continua igual)\r\n                }).then(() => {\r\n                    setPlacar({ score: 0, vidas: 3 }); \r\n                    buscarPergunta();\r\n                });\r\n            } else {\r\n                setTimeout(() => {\r\n                    buscarPergunta();\r\n                }, 2000);\r\n            }\r\n\r\n        } catch (error) {\r\n            // ... (lógica de erro continua igual)\r\n        }\r\n    };\r\n    \r\n    // 3. NOVA FUNÇÃO para decidir a classe do botão\r\n    const getButtonClass = (opcao) => {\r\n        if (!statusResposta.selecionada) {\r\n            // Se ninguém respondeu ainda, classe padrão\r\n            return styles.botaoOpcao;\r\n        }\r\n        if (opcao === statusResposta.correta) {\r\n            // Se a opção é a correta, pinta de verde\r\n            return `${styles.botaoOpcao} ${styles.correto}`;\r\n        }\r\n        if (opcao === statusResposta.selecionada) {\r\n            // Se a opção foi a que o usuário clicou (e não é a correta), pinta de vermelho\r\n            return `${styles.botaoOpcao} ${styles.incorreto}`;\r\n        }\r\n        // Para as outras opções, deixa desabilitada\r\n        return `${styles.botaoOpcao} ${styles.desabilitado}`;\r\n    };\r\n\r\n\r\n    if (!pergunta && carregando) { return <div>Carregando...</div>; }\r\n    if (!pergunta) { return <div>Não foi possível carregar o jogo...</div>; }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.placar}>\r\n                <p>Pontos: {placar.score}</p>\r\n                <p>Vidas: {placar.vidas} ❤️</p>\r\n            </div>\r\n            <div className={styles.pergunta}>\r\n                <h2>{pergunta.pergunta}</h2>\r\n                {pergunta.dica_extra && <p><em>Dica: {pergunta.dica_extra}</em></p>}\r\n            </div>\r\n            \r\n            {feedback && <div className={styles.feedback}>{feedback}</div>}\r\n\r\n            <div className={styles.opcoes}>\r\n                {pergunta.opcoes.map((opcao, index) => (\r\n                    <button \r\n                        key={index}\r\n                        // 4. A classe do botão agora é dinâmica!\r\n                        className={getButtonClass(opcao)}\r\n                        onClick={() => handleResposta(opcao)}\r\n                        // Desabilita todos os botões assim que uma resposta é selecionada\r\n                        disabled={carregando || statusResposta.selecionada}\r\n                    >\r\n                        {opcao}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jogo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}