# GeoWhat?!

O **GeoWhat?!** é um jogo de trivia geográfica full-stack, desenvolvido como projeto para a disciplina de Back-end II. A aplicação combina um back-end robusto e modular em **Node.js/Express.js** com uma interface de usuário (UI) reativa em **React**. O projeto se destaca pela sua ampla variedade de perguntas geradas dinamicamente, múltiplos modos de jogo, e um foco intenso em boas práticas de desenvolvimento e experiência do usuário, incluindo sistema de conquistas e animações ricas.

---

## Modos de Jogo

O jogo foi projetado com alta rejogabilidade, oferecendo dois modos distintos:

### Modo Clássico
- **Objetivo:** Testar o conhecimento de forma estratégica.  
- **Vidas:** O jogador começa com 3 vidas e perde uma a cada erro.  
- **Pontuação:** +1 ponto por acerto.  
- **Vitória / Derrota:** Vence ao atingir 5 pontos; perde ao zerar as vidas.

### Modo Time Attack
- **Objetivo:** Testar agilidade e conhecimento sob pressão.  
- **Tempo:** O jogador começa com 60 segundos.  
- **Bônus:** +2 segundos por acerto.  
- **Penalidade:** -10 segundos por erro.  
- **Fim de Jogo:** Quando o tempo chega a zero. O objetivo é alcançar a maior pontuação possível.

---

## Tipos de Pergunta

O back-end utiliza geradores de pergunta modulares, permitindo adicionar facilmente novos tipos de desafio. Atualmente, são 9 categorias:

- **Por Capital:** "A qual país pertence a capital: Roma?"  
- **Por Bandeira:** "A qual país pertence esta bandeira?" (exibe a imagem da bandeira)  
- **Por Idioma:** "Qual destes países tem 'Espanhol' como idioma oficial?"  
- **Por Moeda:** "A qual país pertence a moeda 'Dólar Canadense'?" (com dica da cotação em tempo real)  
- **Por Fronteira:** "Qual destes países faz fronteira com a Polônia?"  
- **Maior População:** "Qual destes países possui a maior população?"  
- **Menor População:** "Qual destes países possui a menor população?"  
- **Maior Território:** "Qual destes países possui o maior território (área)?"  
- **Menor Território:** "Qual destes países possui o menor território (área)?"

---

## Features Principais

### 1. Lógica de Jogo e Back-end
- **Gerenciamento de Estado:** API stateless que gerencia placar, vidas e pergunta atual via sessões (express-session).  
- **Tradução de Dados:** Países, capitais e idiomas traduzidos para português.  
- **Modo Desenvolvedor:** Loga a resposta correta no console para testes.  
- **Filtragem Inteligente:** Remove perguntas baseadas em imagem ao detectar requisição da documentação do Swagger.

### 2. Interface e Experiência do Usuário (UI/UX)
- **Tema Claro/Escuro:** Persistência da escolha via localStorage.  
- **Modais Customizados:** Alertas e pop-ups estilizados com **SweetAlert2**.  
- **Animações Ricas (Framer Motion):**  
  - Transições de tela suaves  
  - Animações de entrada/saída das perguntas  
  - Efeitos de "pop" e "shake" no placar  
  - Barra de tempo dinâmica  
  - Corações animados ao perder vida  
  - Efeito de confete na vitória (canvas-confetti)  
- **Tooltips Estilizados:** Dicas nos menus e conquistas (**react-tooltip**)  
- **Feedback Visual:** Botões de resposta mudam de cor e desabilitam após a jogada

### 3. Sistema de Conquistas
- Monitoramento de progresso do jogador  
- Conquistas salvas permanentemente no localStorage  
- Notificação discreta ao desbloquear conquistas

---

## Arquitetura e Boas Práticas

- **Separação de Responsabilidades:** Back-end e front-end modularizados (serviços, contextos, componentes e geradores).  
- **Segurança:** Chaves de API gerenciadas via arquivos `.env`.  
- **Versionamento:** Git com feature branches para novas funcionalidades.  
- **Facilidade de Teste:** Scripts `.bat` para automatizar instalação e inicialização em Windows.

---

## Tecnologias Utilizadas

- **Back-end:** Node.js, Express.js, express-session, axios, dotenv  
- **Front-end:** React.js, axios, react-icons, react-tooltip, SweetAlert2, canvas-confetti, Framer Motion  
- **APIs Externas:** REST Countries, ExchangeRate-API  
- **Ferramentas:** Git/GitHub, npm, VS Code
